openapi: 3.0.3
paths:
  /students:
    get:
      summary: Get all students
      description: Returns a paginated list of students
      parameters:
        - name: cursor
          in: query
          required: false
          schema:
            type: string
          description: Cursor for pagination
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 20
          description: Number of items to return
      responses:
        "200":
          description: Paginated list of students
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StudentListResponse"
  /students/{studentId}:
    get:
      summary: Get student by ID
      description: Returns a single student
      parameters:
        - name: studentId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Student details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Student"
        "404":
          description: Student not found
  /positions:
    get:
      summary: Get all positions
      description: Returns a paginated list of positions
      parameters:
        - name: cursor
          in: query
          required: false
          schema:
            type: string
          description: Cursor for pagination
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 20
          description: Number of items to return
      responses:
        "200":
          description: Paginated list of positions
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PositionListResponse"
  /positions/{positionId}:
    get:
      summary: Get position by ID
      description: Returns a single position
      parameters:
        - name: positionId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Position details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Position"
        "404":
          description: Position not found
  /highSchools:
    get:
      summary: Get all high schools
      description: Returns a paginated list of high schools
      parameters:
        - name: cursor
          in: query
          required: false
          schema:
            type: string
          description: Cursor for pagination
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 20
          description: Number of items to return
      responses:
        "200":
          description: Paginated list of high schools
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HighSchoolListResponse"
  /highSchools/{highSchoolId}:
    get:
      summary: Get high school by ID
      description: Returns a single high school
      parameters:
        - name: highSchoolId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: High school details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HighSchool"
        "404":
          description: Position not found
components:
  schemas:
    StudentListResponse:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: "#/components/schemas/Student"
        nextCursor:
          type: string
          nullable: true
          description: Cursor for next page, or null if no more results
    PositionListResponse:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: "#/components/schemas/Position"
        nextCursor:
          type: string
          nullable: true
          description: Cursor for next page, or null if no more results
    HighSchoolListResponse:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: "#/components/schemas/HighSchool"
        nextCursor:
          type: string
          nullable: true
          description: Cursor for next page, or null if no more results
    Student:
      type: object
      required:
        - id
        - firstName
        - lastName
        - graduationYear
        - email
        - phone
        - homeAddress
        - highSchoolId
      properties:
        id:
          type: string
          format: uuid
        firstName:
          type: string
          x-faker: name.firstName
        lastName:
          type: string
          x-faker: name.lastName
        graduationYear:
          type: integer
          x-faker:
            datatype.number:
              min: 2020
              max: 2025
        email:
          type: string
          format: email
          x-faker: internet.email
        phone:
          type: string
          x-faker: phone.phoneNumber
        homeAddress:
          type: string
          x-faker: address.streetAddress
        highSchoolId:
          type: string
          format: uuid
    Position:
      type: object
      required:
        - id
        - company
        - status
        - address
        - gwLocation
      properties:
        id:
          type: string
          format: uuid
        company:
          type: string
          x-faker: company.companyName
        address:
          type: string
          x-faker: address.streetAddress
        workLocation:
          type: string
          description: Indicates if the position is onsite, hybrid, or remote
          enum:
            - onsite
            - hybrid
            - remote
        startDate:
          type: string
          format: date
          nullable: true
        endDate:
          type: string
          format: date
          nullable: true
        status:
          type: string
          enum:
            - active
            - inactive
        gwLocation:
          type: string
          x-faker: address.cityName
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    HighSchool:
      type: object
      required:
        - id
        - name
        - gwLocation
        - address
      properties:
        id:
          type: string
          format: uuid
          x-faker: string.uuid
        name:
          type: string
          x-faker: company.companyName
        gwLocation:
          type: string
          x-faker: address.cityName
        address:
          type: string
          x-faker: address.streetAddress
